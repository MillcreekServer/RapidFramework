buildscript {
    ext.kotlin_version = '1.3.21'
    ext.bukkit_version = "1.15"
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'java'
    id("maven-publish")
}

group = 'io.github.wysohn'
version = '2.12.12'

ext {
    kotlin_version = '1.3.21'
    plugin_version = version
    bukkit_version = '1.15.2-R0.1-SNAPSHOT'
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', 'src/main/kotlin']
        }
        resources {
            srcDirs = ['src/main/resources']
            include '**/*.yml'
            include '**/*.mcmeta'
            include '**/*.json'
            include '**/*.png'
        }
    }

    test {
        java {
            srcDirs = ['src/test/java/']
        }
    }
}

test {
    minHeapSize = "128m"
    maxHeapSize = "512m"
    forkEvery = 25
    maxParallelForks = 2

    testLogging {
        exceptionFormat = 'full'
    }
}

sourceCompatibility = 1.8

task copyThirdPartyJar(type: Copy) {
    from file('libs')
    include '*.jar'
    exclude 'spigot*.jar'
    into file('build/libs')
}
jar.finalizedBy(copyThirdPartyJar)

repositories {
    jcenter()
    mavenCentral()
    maven {
        url "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven{
        url "https://hub.spigotmc.org/nexus/content/repositories/public/"
    }
    maven {
        url "http://nexus.hc.to/content/repositories/pub_releases/"
    }
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
}

configurations {
    all*.exclude group: 'com.google.gson'
}

dependencies {
    // https://mvnrepository.com/artifact/mysql/mysql-connector-java
    implementation group: 'mysql', name: 'mysql-connector-java', version: '5.1.6'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'

    implementation fileTree(dir: "libs", includes: ['*.jar'])
    implementation "org.spigotmc:spigot-api:${bukkit_version}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'org.mockito:mockito-core:1.9.5'
    implementation 'org.powermock:powermock:1.5.6'
    implementation 'org.powermock:powermock-module-junit4:1.5.6'
    implementation 'org.powermock:powermock-api-mockito:1.5.6'
    implementation 'org.javassist:javassist:3.20.0-GA'
    implementation group: 'org.slf4j', name:'slf4j-api', version: '1.7.2'
    implementation group: 'org.slf4j', name:'slf4j-simple', version: '1.7.2'

    testCompile 'junit:junit:4.11'
    testCompile 'org.mockito:mockito-core:1.9.5'
    testCompile 'org.powermock:powermock:1.5.6'
    testCompile 'org.powermock:powermock-module-junit4:1.5.6'
    testCompile 'org.powermock:powermock-api-mockito:1.5.6'
    testCompile 'org.javassist:javassist:3.20.0-GA'
    testCompile group: 'com.carrotsearch', name: 'junit-benchmarks', version: '0.7.0'
}

jar {
    from sourceSets.main.allSource
}

jar {
    from {
        String[] include = [
                "kotlin-runtime-${kotlin_version}.jar",
                "kotlin-stdlib-${kotlin_version}.jar",
                "kotlin-support-${kotlin_version}.jar",
        ]

        configurations.compile
                .findAll { include.contains(it.name) }
                .collect { it.isDirectory() ? it : zipTree(it) }
    }

    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
}

publishing {
    repositories {
        maven {
            name = "RapidFramework"
            url = uri("https://maven.pkg.github.com/wysohn/RapidFramework")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}